/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  collections: {
    users: User;
    grupos: Grupo;
    salones: Salone;
    comisiones: Comisione;
    entradas: Entrada;
    comentarios: Comentario;
    colaboraciones: Colaboracione;
    aprecio: Aprecio;
    imagenes: Imagene;
    archivos: Archivo;
    avatares: Avatare;
    notificaciones: Notificacione;
    fijadas: Fijada;
    etiquetas: Etiqueta;
    mailQueue: MailQueue;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    grupos: GruposSelect<false> | GruposSelect<true>;
    salones: SalonesSelect<false> | SalonesSelect<true>;
    comisiones: ComisionesSelect<false> | ComisionesSelect<true>;
    entradas: EntradasSelect<false> | EntradasSelect<true>;
    comentarios: ComentariosSelect<false> | ComentariosSelect<true>;
    colaboraciones: ColaboracionesSelect<false> | ColaboracionesSelect<true>;
    aprecio: AprecioSelect<false> | AprecioSelect<true>;
    imagenes: ImagenesSelect<false> | ImagenesSelect<true>;
    archivos: ArchivosSelect<false> | ArchivosSelect<true>;
    avatares: AvataresSelect<false> | AvataresSelect<true>;
    notificaciones: NotificacionesSelect<false> | NotificacionesSelect<true>;
    fijadas: FijadasSelect<false> | FijadasSelect<true>;
    etiquetas: EtiquetasSelect<false> | EtiquetasSelect<true>;
    mailQueue: MailQueueSelect<false> | MailQueueSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    ajustes: Ajuste;
  };
  globalsSelect: {
    ajustes: AjustesSelect<false> | AjustesSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  rol?: ('alumno' | 'docente') | null;
  nombre?: string | null;
  avatar?: (string | null) | Avatare;
  bio?: string | null;
  link?: string | null;
  mostrarEmail?: boolean | null;
  notificacionesMail?: {
    activas?: boolean | null;
    mencionNueva?: boolean | null;
    comentarioNuevo?: boolean | null;
  };
  slug?: string | null;
  isAdmin?: boolean | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "avatares".
 */
export interface Avatare {
  id: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "grupos".
 */
export interface Grupo {
  id: string;
  nombre?: string | null;
  avatar?: (string | null) | Avatare;
  integrantes?: (string | User)[] | null;
  contexto?: (string | null) | Salone;
  desc?: string | null;
  link?: string | null;
  slug?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "salones".
 */
export interface Salone {
  id: string;
  nombre?: string | null;
  avatar?: (string | null) | Avatare;
  siglas?: string | null;
  color?: string | null;
  aulas?: string | null;
  archivo?: {
    activar?: boolean | null;
    frecuencia?: ('anual' | 'cuatrimestral') | null;
    annoInicio?: number | null;
  };
  slug?: string | null;
  orden?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "comisiones".
 */
export interface Comisione {
  id: string;
  nombre?: string | null;
  docentes?: (string | User)[] | null;
  integrantes?: (string | User)[] | null;
  contexto?: (string | null) | Salone;
  slug?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "entradas".
 */
export interface Entrada {
  id: string;
  autor?: (string | null) | User;
  contenido?: string | null;
  extracto?: string | null;
  imagenes?:
    | {
        imagen?: (string | null) | Imagene;
        id?: string | null;
      }[]
    | null;
  archivos?:
    | {
        archivo?: (string | null) | Archivo;
        id?: string | null;
      }[]
    | null;
  mencionados?: (string | User)[] | null;
  etiquetas?: (string | Etiqueta)[] | null;
  embedsYoutube?: string | null;
  embedsVimeo?: string | null;
  autoriaGrupal?: boolean | null;
  grupo?: (string | null) | Grupo;
  sala?: (string | null) | Salone;
  destacada?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "imagenes".
 */
export interface Imagene {
  id: string;
  uploader?: (string | null) | User;
  prefix?: string | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "archivos".
 */
export interface Archivo {
  id: string;
  uploader?: (string | null) | User;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "etiquetas".
 */
export interface Etiqueta {
  id: string;
  nombre?: string | null;
  slug?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "comentarios".
 */
export interface Comentario {
  id: string;
  entrada?: (string | null) | Entrada;
  autor?: (string | null) | User;
  contenido?: string | null;
  extracto?: string | null;
  imagenes?:
    | {
        imagen?: (string | null) | Imagene;
        id?: string | null;
      }[]
    | null;
  archivos?:
    | {
        archivo?: (string | null) | Archivo;
        id?: string | null;
      }[]
    | null;
  mencionados?: (string | User)[] | null;
  etiquetas?: (string | Etiqueta)[] | null;
  embedsYoutube?: string | null;
  embedsVimeo?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "colaboraciones".
 */
export interface Colaboracione {
  id: string;
  autor?: (string | null) | User;
  tipo?: ('bitacora' | 'salon' | 'grupo') | null;
  idColaborador?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "aprecio".
 */
export interface Aprecio {
  id: string;
  autor?: (string | null) | User;
  contenidoid?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "notificaciones".
 */
export interface Notificacione {
  id: string;
  autor?: (string | null) | User;
  tipoNotificacion?: ('aprecio' | 'comentario' | 'mencion' | 'colaboracion') | null;
  cantidad?: number | null;
  usuario?: (string | null) | User;
  sourceDocument?:
    | ({
        relationTo: 'entradas';
        value: string | Entrada;
      } | null)
    | ({
        relationTo: 'comentarios';
        value: string | Comentario;
      } | null)
    | ({
        relationTo: 'grupos';
        value: string | Grupo;
      } | null)
    | ({
        relationTo: 'salones';
        value: string | Salone;
      } | null)
    | ({
        relationTo: 'users';
        value: string | User;
      } | null);
  leida?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "fijadas".
 */
export interface Fijada {
  id: string;
  autor?: (string | null) | User;
  contexto?: string | null;
  entrada?: (string | null) | Entrada;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mailQueue".
 */
export interface MailQueue {
  id: string;
  to?: string | null;
  subject?: string | null;
  body?: string | null;
  status?: ('pending' | 'sent' | 'failed') | null;
  errorMessage?: string | null;
  retryCount?: number | null;
  sentAt?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'grupos';
        value: string | Grupo;
      } | null)
    | ({
        relationTo: 'salones';
        value: string | Salone;
      } | null)
    | ({
        relationTo: 'comisiones';
        value: string | Comisione;
      } | null)
    | ({
        relationTo: 'entradas';
        value: string | Entrada;
      } | null)
    | ({
        relationTo: 'comentarios';
        value: string | Comentario;
      } | null)
    | ({
        relationTo: 'colaboraciones';
        value: string | Colaboracione;
      } | null)
    | ({
        relationTo: 'aprecio';
        value: string | Aprecio;
      } | null)
    | ({
        relationTo: 'imagenes';
        value: string | Imagene;
      } | null)
    | ({
        relationTo: 'archivos';
        value: string | Archivo;
      } | null)
    | ({
        relationTo: 'avatares';
        value: string | Avatare;
      } | null)
    | ({
        relationTo: 'notificaciones';
        value: string | Notificacione;
      } | null)
    | ({
        relationTo: 'fijadas';
        value: string | Fijada;
      } | null)
    | ({
        relationTo: 'etiquetas';
        value: string | Etiqueta;
      } | null)
    | ({
        relationTo: 'mailQueue';
        value: string | MailQueue;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  rol?: T;
  nombre?: T;
  avatar?: T;
  bio?: T;
  link?: T;
  mostrarEmail?: T;
  notificacionesMail?:
    | T
    | {
        activas?: T;
        mencionNueva?: T;
        comentarioNuevo?: T;
      };
  slug?: T;
  isAdmin?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "grupos_select".
 */
export interface GruposSelect<T extends boolean = true> {
  nombre?: T;
  avatar?: T;
  integrantes?: T;
  contexto?: T;
  desc?: T;
  link?: T;
  slug?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "salones_select".
 */
export interface SalonesSelect<T extends boolean = true> {
  nombre?: T;
  avatar?: T;
  siglas?: T;
  color?: T;
  aulas?: T;
  archivo?:
    | T
    | {
        activar?: T;
        frecuencia?: T;
        annoInicio?: T;
      };
  slug?: T;
  orden?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "comisiones_select".
 */
export interface ComisionesSelect<T extends boolean = true> {
  nombre?: T;
  docentes?: T;
  integrantes?: T;
  contexto?: T;
  slug?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "entradas_select".
 */
export interface EntradasSelect<T extends boolean = true> {
  autor?: T;
  contenido?: T;
  extracto?: T;
  imagenes?:
    | T
    | {
        imagen?: T;
        id?: T;
      };
  archivos?:
    | T
    | {
        archivo?: T;
        id?: T;
      };
  mencionados?: T;
  etiquetas?: T;
  embedsYoutube?: T;
  embedsVimeo?: T;
  autoriaGrupal?: T;
  grupo?: T;
  sala?: T;
  destacada?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "comentarios_select".
 */
export interface ComentariosSelect<T extends boolean = true> {
  entrada?: T;
  autor?: T;
  contenido?: T;
  extracto?: T;
  imagenes?:
    | T
    | {
        imagen?: T;
        id?: T;
      };
  archivos?:
    | T
    | {
        archivo?: T;
        id?: T;
      };
  mencionados?: T;
  etiquetas?: T;
  embedsYoutube?: T;
  embedsVimeo?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "colaboraciones_select".
 */
export interface ColaboracionesSelect<T extends boolean = true> {
  autor?: T;
  tipo?: T;
  idColaborador?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "aprecio_select".
 */
export interface AprecioSelect<T extends boolean = true> {
  autor?: T;
  contenidoid?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "imagenes_select".
 */
export interface ImagenesSelect<T extends boolean = true> {
  uploader?: T;
  prefix?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "archivos_select".
 */
export interface ArchivosSelect<T extends boolean = true> {
  uploader?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "avatares_select".
 */
export interface AvataresSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "notificaciones_select".
 */
export interface NotificacionesSelect<T extends boolean = true> {
  autor?: T;
  tipoNotificacion?: T;
  cantidad?: T;
  usuario?: T;
  sourceDocument?: T;
  leida?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "fijadas_select".
 */
export interface FijadasSelect<T extends boolean = true> {
  autor?: T;
  contexto?: T;
  entrada?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "etiquetas_select".
 */
export interface EtiquetasSelect<T extends boolean = true> {
  nombre?: T;
  slug?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "mailQueue_select".
 */
export interface MailQueueSelect<T extends boolean = true> {
  to?: T;
  subject?: T;
  body?: T;
  status?: T;
  errorMessage?: T;
  retryCount?: T;
  sentAt?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ajustes".
 */
export interface Ajuste {
  id: string;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ajustes_select".
 */
export interface AjustesSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}